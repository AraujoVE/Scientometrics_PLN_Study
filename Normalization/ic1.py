import numpy as np
import matplotlib.pyplot as plt
from pca import pca
import pltColorMarker
import os

'''
First part of the project to study scientometrics with pln.
In this part, the files that were generated by 'generateMergedTexts.py'
and normalized by 'normalizeDir.py' are analyzed.
An numpy array with a matrix of nxn is generated, where n is the number
of choosen strings. each column represents a string and each row represents
another of this strings. The value of each cell is minimum number of appearences
of the string in the text between the two strings. This nxn array is then  
converted into a ((n² + n)/2) vector which just the uper triangle of the matrix
without the main diagonal are taken.
A matrix with each line being one area and the columns being the ((n² + n)/2) values
is generated and passed to a pca, to reduce the dimensionality of the data.
'''

def createArray(path,keyStrs):
    strsQtty = {}
    arrayKeys = np.zeros(len(keyStrs)**2).reshape((len(keyStrs),len(keyStrs))) 
    
    with open(path, 'r') as f:
        text = f.read()
    textSize = len(text.split())
    for str in keyStrs:
        strsQtty[str] = text.count(str)#/textSize
    for i in range(len(keyStrs)):
        for j in range(len(keyStrs)):
            arrayKeys[i,j] = min(strsQtty[keyStrs[i]],strsQtty[keyStrs[j]])

    return arrayKeys

def getKeyStrs(path):
    with open(path) as f:
        keyStrs = f.read().split()
    return keyStrs

def padronizeToPca(array):
    arrayLen = len(array)
    newArray = []
    for i in range(arrayLen-1):
        for j in range(i,arrayLen):
                newArray.append(array[i,j])

    return np.array(newArray)

def plotPoints(pcaArray,arrayNames):
    fig, ax = plt.subplots()

    for i in range(len(arrayNames)):
        ax.scatter(pcaArray[i,0], pcaArray[i,1], c=pltColorMarker.getColor(i), marker=pltColorMarker.getMarker(i), label=arrayNames[i])
    ax.legend()
    plt.savefig('./figs/pca.png')

def main(textsDirPath, keysPath):
    keyStrs = getKeyStrs(keysPath)
    textFilesNames = os.listdir(textsDirPath)
    arrayKeys = []
    arrayNames = []
    for textPath in textFilesNames:
        arrayNames.append(textPath.split('.')[0])
        arrayKeys.append(padronizeToPca(createArray(textsDirPath+'/'+textPath, keyStrs)))
    arrayKeys = np.asarray(arrayKeys)
    pcaArray = pca(arrayKeys)
    plotPoints(pcaArray, arrayNames)


main('./GeneralTexts/Normalized','./ChoosenStrs/Normalized/specialStrs.txt')